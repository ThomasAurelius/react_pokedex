{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teg82\\\\OneDrive\\\\Documents\\\\GitHub\\\\react_pokedex\\\\src\\\\PokeCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport icons from './icons/iconindex.js';\nimport grass from './icons/grass.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokeCard(props) {\n  _s();\n\n  console.log(props);\n  const [pokemonData, setPokemonData] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    const getPokemon = async id => {\n      const url = `https://pokeapi.co/api/v2/pokemon/${id}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setPokemonData(data);\n      setLoading(false);\n    };\n\n    getPokemon(props.id);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  console.log(pokemonData);\n  const pokemonIcons = {\n    grass: './icons/grass.svg',\n    poison: './icons/poison.svg',\n    fire: './icons/fire/svg'\n  };\n  const colors = {\n    fire: '#d82b34',\n    fairy: '#fceaff',\n    bug: '#f8d5a3',\n    psychic: '#eaeda1',\n    grass: '#1ad148',\n    electric: '#FCF7DE',\n    water: '#DEF3FD',\n    poison: '#837ad6',\n    ground: '#f4e7da',\n    rock: '#d5d5d4',\n    normal: '#F5F5F5',\n    dragon: '#97b3e6',\n    flying: '#30aae2',\n    fighting: '#E6E0D4',\n    steel: '#979595',\n    ice: '#6eb8e9'\n  };\n  const main_types = Object.keys(colors);\n  const poke_type = pokemonData.types.map(item => {\n    return item.type.name;\n  });\n  let poke_type2 = \"\";\n\n  if (poke_type[1]) {\n    poke_type2 = poke_type[1];\n  } else {\n    poke_type2 = poke_type;\n  }\n\n  const type = main_types.find(type => poke_type[0].indexOf(type) > -1);\n  const type2 = main_types.find(type => poke_type2.indexOf(type) > -1);\n  const color = colors[type];\n  const color2 = colors[type2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PokeCard\",\n    id: pokemonData.name,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon\",\n      style: {\n        background: `linear-gradient(${color2}, ${color})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: pokemonData.name,\n        className: \"pokemon-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemonData.id}.svg`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"name\",\n            children: pokemonData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"type variable = \", type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: \"./icons/{type}\",\n            alt: ` regular string and variable - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: pokemonIcons.type,\n            alt: ` using an object and variable - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: icons.type,\n            alt: ` using an imported index & variable - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: `./icons/${type}.svg`,\n            alt: ` string interpolation & variable - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: `${type}`,\n            alt: ` local import & import name - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"type-icon\",\n            src: \"./icons/grass.svg\",\n            alt: ` no variable, direct path - ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), \":\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `./icons/${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"type\",\n            children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [type, \", \", type2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"number\",\n        children: [\"#\", pokemonData.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n} //line 91 -102 not working- not displaying the svg according to type\n//fix the double type issue when pokemon only has 1 type..\n\n_s(PokeCard, \"XofMg9Q+bSCQbnB1NGhXezrbVdU=\");\n\n_c = PokeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeCard\");","map":{"version":3,"names":["React","nanoid","icons","grass","PokeCard","props","console","log","pokemonData","setPokemonData","useState","loading","setLoading","useEffect","getPokemon","id","url","res","fetch","data","json","pokemonIcons","poison","fire","colors","fairy","bug","psychic","electric","water","ground","rock","normal","dragon","flying","fighting","steel","ice","main_types","Object","keys","poke_type","types","map","item","type","name","poke_type2","find","indexOf","type2","color","color2","background"],"sources":["C:/Users/teg82/OneDrive/Documents/GitHub/react_pokedex/src/PokeCard.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport  icons  from './icons/iconindex.js'\r\nimport grass from './icons/grass.svg'\r\n\r\n\r\n\r\n\r\nexport default function PokeCard(props) {\r\n  \r\n \r\n  console.log(props)\r\n  const [pokemonData, setPokemonData] = React.useState({})\r\n  const [loading, setLoading] = React.useState(true)\r\n\r\n  \r\n  React.useEffect(() => {\r\n    const getPokemon = async (id) => {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n    const res = await fetch(url)\r\n    const data = await res.json()\r\n  \r\n    setPokemonData(data)\r\n    setLoading(false)\r\n\r\n  }\r\n  getPokemon(props.id)\r\n     \r\n    }, [])  \r\n\r\n  if (loading) return <h1>LOADING....</h1>\r\n  \r\n\r\nconsole.log(pokemonData)\r\n         \r\nconst pokemonIcons = {\r\n  grass: './icons/grass.svg',\r\n  poison: './icons/poison.svg',\r\n  fire: './icons/fire/svg'\r\n}\r\n  const colors = {\r\n   fire: '#d82b34',\r\n   fairy: '#fceaff',\r\n   bug: '#f8d5a3',\r\n   psychic: '#eaeda1',\r\n   grass: '#1ad148',\r\n\t electric: '#FCF7DE',\r\n\t water: '#DEF3FD',\r\n   poison: '#837ad6',\r\n\t ground: '#f4e7da',\r\n   rock: '#d5d5d4',\r\n   normal: '#F5F5F5',\t\r\n\t dragon: '#97b3e6',\t\r\n\t flying: '#30aae2',\r\n\t fighting: '#E6E0D4',\t\r\n   steel: '#979595',\r\n   ice: '#6eb8e9'   \r\n}\r\nconst main_types = Object.keys(colors)\r\n\r\nconst poke_type = pokemonData.types.map(item => {\r\n    return item.type.name\r\n})\r\n   \r\n   let poke_type2 = \"\"\r\n   if (poke_type[1]) {\r\n      poke_type2 = poke_type[1]\r\n   } else {\r\n      poke_type2 = poke_type \r\n   }\r\n\r\n   const type = main_types.find(type => poke_type[0].indexOf(type) > -1)\r\n   const type2 = main_types.find(type => poke_type2.indexOf(type) > -1)\r\n\r\n   const color = colors[type]\r\n   const color2 = colors[type2]\r\n\r\n   \r\n      return (\r\n        \r\n        <div className=\"PokeCard\" key={nanoid()} id={pokemonData.name}>\r\n          <div className=\"pokemon\" style={{background: `linear-gradient(${color2}, ${color})`}}>\r\n            <div id={pokemonData.name} className=\"pokemon-wrapper\">\r\n\r\n              <div className=\"img-container\">\r\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemonData.id}.svg`} alt=\"\" />\r\n              </div>\r\n              <div className=\"info\">            \r\n                <h3 className=\"name\">{pokemonData.name}</h3>\r\n               \r\n                <h4>type variable = {type}</h4>\r\n                <img class=\"type-icon\" src=\"./icons/{type}\" alt={` regular string and variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={pokemonIcons.type} alt={` using an object and variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={icons.type} alt={` using an imported index & variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={`./icons/${type}.svg`} alt={` string interpolation & variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={`${type}`} alt={` local import & import name - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src=\"./icons/grass.svg\" alt={` no variable, direct path - ${type}`} />\r\n            \r\n                <br />\r\n                :\r\n                <img src={`./icons/${type}`} />\r\n\r\n                <small className=\"type\">Type: <span>{type}, {type2}</span></small>\r\n              </div>        \r\n            </div>\r\n               <span className=\"number\">#{pokemonData.id}</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n\r\n  \r\n}\r\n\r\n//line 91 -102 not working- not displaying the svg according to type\r\n//fix the double type issue when pokemon only has 1 type.."],"mappings":"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"},"metadata":{},"sourceType":"module"}