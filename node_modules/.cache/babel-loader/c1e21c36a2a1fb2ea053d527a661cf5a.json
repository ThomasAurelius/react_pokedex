{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teg82\\\\OneDrive\\\\Documents\\\\GitHub\\\\react_pokedex\\\\src\\\\PokeCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokeCard() {\n  _s();\n\n  const pokemonId = 1;\n  const [pokemonData, setPokemonData] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  let pokemonStart = 1;\n  let pokemonEnd = 50;\n  React.useEffect(() => {\n    const getPokemon = async id => {\n      const url = `https://pokeapi.co/api/v2/pokemon/${id}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setPokemonData(data);\n      setLoading(false);\n\n      const fetchPokemons = async () => {\n        for (let i = pokemonStart; i <= pokemonEnd; i++) {\n          await getPokemon(i);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"PokeCard\",\n            id: pokemonData.name,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pokemon\",\n              style: {\n                background: `linear-gradient(${color2}, ${color})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: pokemonData.name,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"number\",\n                  children: [\"#\", pokemonData.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"img-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemonData.id}.svg`,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"name\",\n                    children: pokemonData.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"type\",\n                    children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [type, \", \", type2]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this)\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this);\n        }\n      };\n    };\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  console.log(pokemonData);\n  const colors = {\n    fire: '#d82b34',\n    fairy: '#fceaff',\n    bug: '#f8d5a3',\n    psychic: '#eaeda1',\n    grass: '#1ad148',\n    electric: '#FCF7DE',\n    water: '#DEF3FD',\n    poison: '#837ad6',\n    ground: '#f4e7da',\n    rock: '#d5d5d4',\n    normal: '#F5F5F5',\n    dragon: '#97b3e6',\n    flying: '#30aae2',\n    fighting: '#E6E0D4',\n    steel: '#979595',\n    ice: '#6eb8e9'\n  };\n  const main_types = Object.keys(colors);\n  const poke_type = pokemonData.types.map(item => {\n    return item.type.name;\n  });\n  let poke_type2 = \"\";\n\n  if (poke_type[1]) {\n    poke_type2 = poke_type[1];\n  } else {\n    poke_type2 = poke_type;\n  }\n\n  const type = main_types.find(type => poke_type[0].indexOf(type) > -1);\n  const type2 = main_types.find(type => poke_type2.indexOf(type) > -1);\n  const color = colors[type];\n  const color2 = colors[type2];\n  return {\n    fetchPokemons\n  };\n}\n\n_s(PokeCard, \"XofMg9Q+bSCQbnB1NGhXezrbVdU=\");\n\n_c = PokeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeCard\");","map":{"version":3,"names":["React","nanoid","PokeCard","pokemonId","pokemonData","setPokemonData","useState","loading","setLoading","pokemonStart","pokemonEnd","useEffect","getPokemon","id","url","res","fetch","data","json","fetchPokemons","i","name","background","color2","color","type","type2","console","log","colors","fire","fairy","bug","psychic","grass","electric","water","poison","ground","rock","normal","dragon","flying","fighting","steel","ice","main_types","Object","keys","poke_type","types","map","item","poke_type2","find","indexOf"],"sources":["C:/Users/teg82/OneDrive/Documents/GitHub/react_pokedex/src/PokeCard.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function PokeCard() {\r\n  \r\n  const pokemonId = 1\r\n  \r\n  const [pokemonData, setPokemonData] = React.useState({})\r\n  const [loading, setLoading] = React.useState(true)\r\n\r\n  let pokemonStart = 1\r\n  let pokemonEnd = 50\r\n\r\n  React.useEffect(() => {\r\n    const getPokemon = async (id) => {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n    const res = await fetch(url)\r\n    const data = await res.json()\r\n  \r\n    setPokemonData(data)\r\n    setLoading(false)\r\n\r\n\r\n      const fetchPokemons = async () => { \r\n   for(let i = pokemonStart; i <= pokemonEnd; i++) {\r\n      await getPokemon(i)\r\n   \r\n   \r\n      return (\r\n        \r\n        <div className=\"PokeCard\" key={nanoid()} id={pokemonData.name}>\r\n          <div className=\"pokemon\" style={{background: `linear-gradient(${color2}, ${color})`}}>\r\n            <div id={pokemonData.name}>\r\n              <span className=\"number\">#{pokemonData.id}</span>\r\n              <div className=\"img-container\">\r\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemonData.id}.svg`} alt=\"\" />\r\n              </div>\r\n              <div className=\"info\">            \r\n                <h3 className=\"name\">{pokemonData.name}</h3>\r\n                <small className=\"type\">Type: <span>{type}, {type2}</span></small>\r\n              </div>        \r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n     \r\n    }, [])  \r\n\r\n  if (loading) return <h1>LOADING....</h1>\r\n  \r\n\r\nconsole.log(pokemonData)\r\n         \r\n  const colors = {\r\n   fire: '#d82b34',\r\n   fairy: '#fceaff',\r\n   bug: '#f8d5a3',\r\n   psychic: '#eaeda1',\r\n   grass: '#1ad148',\r\n\t electric: '#FCF7DE',\r\n\t water: '#DEF3FD',\r\n   poison: '#837ad6',\r\n\t ground: '#f4e7da',\r\n   rock: '#d5d5d4',\r\n   normal: '#F5F5F5',\t\r\n\t dragon: '#97b3e6',\t\r\n\t flying: '#30aae2',\r\n\t fighting: '#E6E0D4',\t\r\n   steel: '#979595',\r\n   ice: '#6eb8e9'   \r\n}\r\nconst main_types = Object.keys(colors)\r\n\r\nconst poke_type = pokemonData.types.map(item => {\r\n    return item.type.name\r\n})\r\n   \r\n   let poke_type2 = \"\"\r\n   if (poke_type[1]) {\r\n      poke_type2 = poke_type[1]\r\n   } else {\r\n      poke_type2 = poke_type \r\n   }\r\n\r\n   const type = main_types.find(type => poke_type[0].indexOf(type) > -1)\r\n   const type2 = main_types.find(type => poke_type2.indexOf(type) > -1)\r\n\r\n   const color = colors[type]\r\n   const color2 = colors[type2]\r\n\r\n\r\n      return (\r\n        {fetchPokemons}\r\n      )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}