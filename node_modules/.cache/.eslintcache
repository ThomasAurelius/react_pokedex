[{"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\index.js":"1","C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\App.js":"2","C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\Header.js":"3","C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\PokeCard.js":"4","C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\icons\\iconindex.js":"5"},{"size":267,"mtime":1651940315279,"results":"6","hashOfConfig":"7"},{"size":1404,"mtime":1652166691624,"results":"8","hashOfConfig":"7"},{"size":259,"mtime":1651940753975,"results":"9","hashOfConfig":"7"},{"size":7177,"mtime":1652166691630,"results":"10","hashOfConfig":"7"},{"size":165,"mtime":1652121675077,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15zpsmy",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\index.js",[],[],"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\App.js",[],[],"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\Header.js",[],[],"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\PokeCard.js",["29","30"],[],"import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport  icons  from './icons/iconindex.js'\r\nimport grass from './icons/grass.svg'\r\n\r\n\r\n\r\n\r\nexport default function PokeCard(props) {\r\n  \r\n \r\n  console.log(props)\r\n  const [pokemonData, setPokemonData] = React.useState({})\r\n  const [loading, setLoading] = React.useState(true)\r\n\r\n  \r\n  React.useEffect(() => {\r\n    const getPokemon = async (id) => {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n    const res = await fetch(url)\r\n    const data = await res.json()\r\n  \r\n    setPokemonData(data)\r\n    setLoading(false)\r\n\r\n  }\r\n  getPokemon(props.id)\r\n     \r\n    }, [])  \r\n\r\n  if (loading) return <h1>LOADING....</h1>\r\n  \r\n\r\nconsole.log(pokemonData)\r\n         \r\nconst pokemonIcons = {\r\n  grass: './icons/grass.svg',\r\n  poison: './icons/poison.svg',\r\n  fire: './icons/fire/svg'\r\n}\r\n  const colors = {\r\n   fire: '#d82b34',\r\n   fairy: '#fceaff',\r\n   bug: '#f8d5a3',\r\n   psychic: '#eaeda1',\r\n   grass: '#1ad148',\r\n\t electric: '#FCF7DE',\r\n\t water: '#DEF3FD',\r\n   poison: '#837ad6',\r\n\t ground: '#f4e7da',\r\n   rock: '#d5d5d4',\r\n   normal: '#F5F5F5',\t\r\n\t dragon: '#97b3e6',\t\r\n\t flying: '#30aae2',\r\n\t fighting: '#E6E0D4',\t\r\n   steel: '#979595',\r\n   ice: '#6eb8e9'   \r\n}\r\nconst main_types = Object.keys(colors)\r\n\r\nconst poke_type = pokemonData.types.map(item => {\r\n    return item.type.name\r\n})\r\n   \r\n   let poke_type2 = \"\"\r\n   if (poke_type[1]) {\r\n      poke_type2 = poke_type[1]\r\n   } else {\r\n      poke_type2 = poke_type \r\n   }\r\n\r\n   const type = main_types.find(type => poke_type[0].indexOf(type) > -1)\r\n   const type2 = main_types.find(type => poke_type2.indexOf(type) > -1)\r\n\r\n   const color = colors[type]\r\n   const color2 = colors[type2]\r\n\r\n   \r\n      return (\r\n        \r\n        <div className=\"PokeCard\" key={nanoid()} id={pokemonData.name}>\r\n          <div className=\"pokemon\" style={{background: `linear-gradient(${color2}, ${color})`}}>\r\n            <div id={pokemonData.name} className=\"pokemon-wrapper\">\r\n\r\n              <div className=\"img-container\">\r\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemonData.id}.svg`} alt=\"\" />\r\n              </div>\r\n              <div className=\"info\">            \r\n                <h3 className=\"name\">{pokemonData.name}</h3>\r\n               \r\n                <h4>type variable = {type}</h4>\r\n                <img class=\"type-icon\" src=\"./icons/{type}\" alt={` regular string and variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={pokemonIcons.type} alt={` using an object and variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={icons.type} alt={` using an imported index & variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={`./icons/${type}.svg`} alt={` string interpolation & variable - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src={`${type}`} alt={` local import & import name - ${type}`} />\r\n                <br />\r\n                <img class=\"type-icon\" src=\"../src/icons/grass.svg\" alt={` no variable, direct path - ${type}`} />\r\n            \r\n                <br />\r\n\r\n                <small className=\"type\">Type: <span>{type}, {type2}</span></small>\r\n              </div>        \r\n            </div>\r\n               <span className=\"number\">#{pokemonData.id}</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n\r\n  \r\n}\r\n\r\n//line 91 -102 not working- not displaying the svg according to type\r\n//fix the double type issue when pokemon only has 1 type..",[],"C:\\Users\\teg82\\OneDrive\\Documents\\GitHub\\react_pokedex\\src\\icons\\iconindex.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":29,"column":8,"nodeType":"37","endLine":29,"endColumn":10,"suggestions":"38"},"no-unused-vars","'grass' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [props.id]",{"range":"42","text":"43"},[636,638],"[props.id]"]